# -*- coding: utf-8 -*-
"""Aula 3 - Funções, Manipulações e Erros.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N_x1IsErkwI6YxUalaRuQFnMJfkn9fSu
"""

def calculadora(num1, num2):
  return num1 + num2

x1 = 5

x2 = 3

print(x1+x2)

calculadora(x1,x2)

calculadora(82, 63)

soma = calculadora(55, 37)

soma

print(soma+35)

frase = 'Python é a melhor linguagem do mundo!'

frase[:6]

len(frase)

frase[31:]

frase[:]

frase.find('mundo')

frase[:frase.find('mundo')]

frase[:frase.find(' ')]

ultima_palavra = frase[frase.find(' ', -1):]

ultima_palavra

def trata_frase(frase):
  primeira_palavra = frase[:frase.find(' ')]
  ultima_palavra = frase[frase.find(' ', 30):]
  return primeira_palavra, ultima_palavra

trata_frase(frase)

frase = None

frase

print(frase)

frase = ''

frase = 0

if frase:
  print('NÃO NULO')
else:
  print('NULO')

frase = 'Python é a melhor linguagem do mundo!'

'Python' in frase

'Java' in frase

'linguagem' in frase

if 'Python' in frase:
  print('Esse valor está dentro da variavel frase!')
else:
  print('Não existe esse valor!')

frase

print(frase.upper())

frase = 'PYTHON É A MELHOR LINGUAGEM DO MUNDO!'

print(frase.lower())

frase.isupper()

frase.islower()

frase.startswith('Python')

frase = frase.title()

print(frase)

frase = frase.capitalize()

print(frase)

frase.startswith('Python')

frase.endswith('!')

frase.endswith('mundo!')

frase

frase = frase.split(' ')

frase[-1]

frase[3]

def primeira_ultima(frase):
  print(f'Sua frase possui {len(frase)} palavras')
  print(f'A primeira palavra da frase é {frase[0]}')
  print(f'A última palavra da frase é {frase[-1]}')

primeira_ultima(frase)

frase

' '.join(frase)

';'.join(frase)

frase = ' '.join(frase)

print(frase)

frase.rjust(50, '*')

frase.ljust(50, '*')

frase.center(100, '*')

len('******Python é a melhor linguagem do mundo!*******')

cpf = '345678911'

cpf.rjust(11, '0')

cpf.zfill(11)

def mask_cpf(cpf):
  cpf = str(cpf)
  cpf = cpf.zfill(11)
  return f'{cpf[0:3]}.{cpf[3:6]}.{cpf[6:9]}-{cpf[9:]}'

mask_cpf(12345678911)

mask_cpf(987654321)

texto = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s                                      "

texto = ' '*12+texto

texto = ' '*12+texto.rstrip()

texto

texto.lstrip()

texto

texto.strip()

texto

texto.split(' ')

frase

frase.replace('Python', 'JavaScript')

frase.replace(' ', '')

256 / 0

try:
  divisao = 256 / 0
except ZeroDivisionError:
  print('Seu código teve erro de divisão, porém já previ isso e não crashei o programa!')
except:
  print('Erro geral mapeado')

def divisao(valor1, valor2):
  try:
    valor2 = int(valor2)
    divisao = valor1 / valor2
  except ZeroDivisionError as error:
    print(f'{error}')
  except:
    print('Erro geral mapeado, porém tome cuidado!')
  else:
    return divisao
  finally:
    print('O seu programa terminou de executar!')

divisao(15, 0)

idade = 16

if idade >= 18:
  print('Parabéns! Você pode acessar este site!')
else:
  raise SystemError('Você ainda é menor de idade!')

import datetime

hoje = datetime.date.today()

print(hoje)

hoje = datetime.datetime.now()

hoje

hoje_formatado = hoje.strftime('%d/%m/%Y')

hoje_formatado

hoje

nova_data = '31-2022-12'

retorna_data = datetime.datetime.strptime(nova_data, '%d-%Y-%m')

retorna_data

hoje

ontem = hoje - datetime.timedelta(days=7)

ontem

amanha = hoje + datetime.timedelta(days=1)

amanha

(amanha - ontem).days

