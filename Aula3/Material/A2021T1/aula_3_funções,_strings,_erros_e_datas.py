# -*- coding: utf-8 -*-
"""Aula 3 - Funções, Strings, Erros e Datas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18j1jeq3U7tvyVwzeBaSl_u8b4d6h7DLX
"""

def soma(num1, num2):
  return num1 + num2

soma(15, 32)

def apresenta_nome(nome):
  print(f'O nome de entrada é {nome}')

nome = input('Qual o seu primeiro nome? R:')

apresenta_nome(nome)

variavel = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."

variavel

'Lorem Ipsum' not in variavel

variavel[0:15]

variavel[:variavel.find('1960s')]

variavel.find('1960s')

variavel[variavel.find('1960s'):]

maiuscula = variavel.upper()

maiuscula

maiuscula.lower()

maiuscula.capitalize()

livro = 'harry potter e a pedra filosofal'

livro.title()

livro

livro.islower()

maiuscula.isupper()

livro.startswith('harry')

livro.startswith('filosofal')

livro.endswith('filosofal')

livro

lista_livro = livro.split(' ')

lista_livro[0]

len(lista_livro)

lista_livro[-1]

type(lista_livro)

string_livro = ';'.join(lista_livro)

type(string_livro)

cpf = 3456789011

cpf = str(cpf)

cpf

cpf = cpf.zfill(11)

cpf

cpf_com_mascara = f"{cpf[:3]}.{cpf[3:6]}.{cpf[6:9]}-{cpf[9:]}"

cpf_com_mascara

cep = '12345345'

cep_com_mascara = f"{cep[0:2]}.{cep[2:5]}-{cep[5:]}"

cep_com_mascara

nome_inteiro = input('Informe seu nome inteiro: ')

nome_inteiro.strip()

livro

livro.replace('harry potter', 'star wars')

int(cpf_com_mascara.replace('.', '').replace('-', ''))

variavel

variavel = None

print(variavel)

variavel = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."

variavel

if variavel:
  print('Está preenchida')
else:
  print('Não está preenchida')

10 / 0

def divisao(valor1, valor2):
  valor1 = str(valor1)
  try:
    valor1 = int(valor1)
    valor2 = int(valor2)
  except ZeroDivisionError as error:
    print(f'{error}')
    print(f'Não foi possível dividir o valor {valor1} pelo valor {valor2}')
  else:
    return valor1 / valor2
  finally:
    print('Isso aqui rodará independente do erro')

x = int(input('Insira um número para ser dividido: '))

y = int(input('Insita um número para dividir o número informado anteriormente: '))

divisao(x, y)

def divisao(valor1, valor2):
  return valor1 / valor2

import this

import datetime

datetime.date.today()

datetime.datetime.today()

hoje = datetime.datetime.today()

hoje_formatado = hoje.strftime('%Y/%m/%d')
meses = {'Oct': 'Outubro'}

print(type(hoje), hoje)
print(type(hoje_formatado), hoje_formatado)

data_antes = datetime.datetime.strptime(hoje_formatado, '%Y/%m/%d')
data_antes

hoje

ontem = hoje - datetime.timedelta(days=1)

ontem

amanha = hoje + datetime.timedelta(days=1)

amanha

julho = hoje - datetime.timedelta(days=90)

julho

print(hoje, '////////', julho)

(hoje - julho).days

(amanha - ontem).days

import pytz

datetime.datetime.now(tz=pytz.utc)

br = pytz.timezone('Brazil/East')

br

